programa Tp3Ej6_FINAL_enProceso
procesos
  proceso juntarFloresYOPapeles(E esFlorero: boolean;ES esPapelero:boolean)
  comenzar
    si esFlorero
      mientras HayFlorEnLaEsquina
        tomarFlor
    si esPapelero
      mientras HayPapelEnLaEsquina
        tomarPapel
  fin
  proceso definirSigEsq(E nroLado:numero;ES av:numero;ES ca:numero)
  comenzar
    si nroLado=1
      ca:=ca+1
    sino
      si nroLado=2
        av:=av+1
      sino
        si nroLado=3
          ca:=ca-1
        sino
          av:=av-1
  fin
  proceso cuadrado(E esFlorero:boolean;E esPapelero:boolean;E tam:numero)
  variables
    nextAv,nextCa,i,estoyAv,estoyCa:numero
    bloquear:boolean
  comenzar
    nextAv:=PosAv
    nextCa:=PosCa
    ladoNro:=0
    bloquear:=F
    repetir 4
      ladoNro:=ladoNro+1
      repetir tam
        juntarFloresYOPapeles(esFlorero,esPapelero)
        definirSigEsq(ladoNro,nextAv,nextCa)
        
        si bloqueado
          si bloquear
            estoyAv:=PosAv
            estoyCa:=PosCa
            Informar('EstoyCa_',estoyCa)
            BloquearEsquina (nextAv,nextCa)
            Pos(nextAv,nextCa)
            LiberarEsquina(estoyAv,estoyCa)
          sino
            mover
      derecha
  fin
  proceso ubicarGanador(E n:numero)
  comenzar
    si n=1
      EnviarMensaje(20,recolectorF)
    sino
      si n=2
        EnviarMensaje(20,recolectorFyP)
      sino
        EnviarMensaje(20,recolectorP)
    repetir 2
      derecha
  fin
  proceso ubicarSegundo(E n:numero)
  comenzar
    si n=1
      EnviarMensaje(21,recolectorF)
    sino
      si n=2
        EnviarMensaje(21,recolectorFyP)
      sino
        EnviarMensaje(21,recolectorP)
    repetir 2
      derecha
  fin
  proceso ubicarTercero(E n:numero)
  comenzar
    si n=1
      EnviarMensaje(22,recolectorF)
    sino
      si n=2
        EnviarMensaje(22,recolectorFyP)
      sino
        EnviarMensaje(22,recolectorP)
    repetir 2
      derecha
  fin
  proceso iniciarRecorrido(E soyFlorero:boolean;E soyPapelero:boolean)
  comenzar
    si soyFlorero & soyPapelero
      si HayFlorEnLaBolsa & HayPapelEnLaBolsa
        depositarFlor
        depositarPapel
        mover
    sino
      si soyFlorero & ~soyPapelero
        si HayFlorEnLaBolsa
          depositarFlor
          mover
    si ~soyFlorero & soyPapelero
      si HayPapelEnLaBolsa
        depositarPapel
        mover
  fin
areas
  areaCuadrados: AreaPC (2,2,16,16)
  areaCarrera: AreaPC (1,20,100,22)
  areaFiscal: AreaP (1,1,1,1)
robots
  robot tipoRecolector
  variables
    quienSoy,cantCuadras,avCaInicio,calle:numero
    soyFlorero,soyPapelero,posicionado:boolean
  comenzar
    RecibirMensaje (quienSoy,fiscal)
    RecibirMensaje (soyFlorero,fiscal)
    RecibirMensaje (soyPapelero,fiscal)
    RecibirMensaje (cantCuadras,fiscal)
    RecibirMensaje (avCaInicio,fiscal)
    Pos(avCaInicio,avCaInicio)
    cuadrado (soyFlorero,soyPapelero,cantCuadras) 
    EnviarMensaje(quienSoy,fiscal)
    RecibirMensaje(calle,fiscal)
    Pos(1,calle)
    iniciarRecorrido(soyFlorero,soyPapelero)
  fin
  robot tipoFiscal
  variables
    i,quien,ganador,segundo,tercero:numero
  comenzar
    EnviarMensaje(1,recolectorF)
    EnviarMensaje(2,recolectorFyP)
    EnviarMensaje(3,recolectorP)
    EnviarMensaje(V,recolectorF)
    EnviarMensaje(F,recolectorF)
    EnviarMensaje(V,recolectorFyP)
    EnviarMensaje(V,recolectorFyP)
    EnviarMensaje(F,recolectorP)
    EnviarMensaje(V,recolectorP)
    EnviarMensaje(6,recolectorF)
    EnviarMensaje(10,recolectorFyP)
    EnviarMensaje(7,recolectorP)
    EnviarMensaje(2,recolectorF)
    EnviarMensaje(5,recolectorFyP)
    EnviarMensaje(9,recolectorP)
    i:=0
    repetir 3
      i:=i+1
      RecibirMensaje(quien,*)
      si i=1
        ganador:=quien
        ubicarGanador(ganador)
        Informar('Ganador_',ganador)
      sino
        si i=2
          segundo:=quien
          ubicarSegundo(segundo)
          Informar('Segundo_',segundo)
        sino
          tercero:=quien
          ubicarTercero(tercero)
          Informar('Ultimo_',tercero)   
  fin
variables
  recolectorF,recolectorFyP,recolectorP: tipoRecolector
  fiscal: tipoFiscal
comenzar
  AsignarArea (recolectorF, areaCuadrados)
  AsignarArea (recolectorF, areaCarrera)
  AsignarArea (recolectorP, areaCuadrados)
  AsignarArea (recolectorP, areaCarrera)
  AsignarArea (recolectorFyP, areaCuadrados)
  AsignarArea (recolectorFyP, areaCarrera)
  AsignarArea (fiscal, areaFiscal)
  Iniciar (recolectorF, 2,2)
  Iniciar( recolectorFyP, 5,5)
  Iniciar (recolectorP, 9,9)
  Iniciar (fiscal, 1,1)
fin